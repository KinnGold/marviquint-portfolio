{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Marviquint - PC/Documents/Portfolio/portfolio-website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Marviquint - PC/Documents/Portfolio/portfolio-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useCallback}from\"react\";import Particles from\"react-tsparticles\";import{loadFull}from\"tsparticles\";import{jsx as _jsx}from\"react/jsx-runtime\";var Particle=function Particle(){var particlesInit=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(engine);// you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n// this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// starting from v2 you can add only the features you need reducing the bundle size\n_context.next=3;return loadFull(engine);case 3:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var particlesLoaded=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(container){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return console.log(container);case 2:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),[]);return/*#__PURE__*/_jsx(Particles,{id:\"tsparticles\",init:particlesInit,loaded:particlesLoaded,options:{\"fullScreen\":{\"enable\":true,\"zIndex\":-1},autoPlay:true,background:{color:{value:\"#0d47a1\"}},fpsLimit:120,interactivity:{events:{onClick:{enable:true,mode:\"push\"},onHover:{enable:true,mode:\"repulse\"},resize:true},modes:{push:{quantity:4},repulse:{distance:200,duration:0.4}}},particles:{color:{value:\"#ffffff\"},links:{color:\"#ffffff\",distance:150,enable:true,opacity:0.5,width:1},collisions:{enable:true},move:{directions:\"none\",enable:true,outModes:{default:\"bounce\"},random:false,speed:5,straight:false},number:{density:{enable:true,area:800},value:80},opacity:{value:0.5},shape:{type:\"circle\"},size:{value:{min:1,max:5}}},detectRetina:true}});};export default Particle;","map":{"version":3,"names":["useCallback","Particles","loadFull","jsx","_jsx","Particle","particlesInit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","wrap","_callee$","_context","prev","next","console","log","stop","_x","apply","arguments","particlesLoaded","_ref2","_callee2","container","_callee2$","_context2","_x2","id","init","loaded","options","autoPlay","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina"],"sources":["C:/Users/Marviquint - PC/Documents/Portfolio/portfolio-website/src/components/Particle.jsx"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst Particle = () => {\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n  return (\r\n    <Particles\r\n            id=\"tsparticles\"\r\n            init={particlesInit}\r\n            loaded={particlesLoaded}\r\n            options={{\r\n                \"fullScreen\":{\r\n                    \"enable\":true,\r\n                    \"zIndex\": -1,\r\n                },\r\n                autoPlay:true,\r\n                background: {\r\n                    color: {\r\n                        value: \"#0d47a1\",\r\n                    },\r\n                },\r\n                fpsLimit: 120,\r\n                interactivity: {\r\n                    events: {\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: \"push\",\r\n                        },\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: \"repulse\",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        push: {\r\n                            quantity: 4,\r\n                        },\r\n                        repulse: {\r\n                            distance: 200,\r\n                            duration: 0.4,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: \"#ffffff\",\r\n                    },\r\n                    links: {\r\n                        color: \"#ffffff\",\r\n                        distance: 150,\r\n                        enable: true,\r\n                        opacity: 0.5,\r\n                        width: 1,\r\n                    },\r\n                    collisions: {\r\n                        enable: true,\r\n                    },\r\n                    move: {\r\n                        directions: \"none\",\r\n                        enable: true,\r\n                        outModes: {\r\n                            default: \"bounce\",\r\n                        },\r\n                        random: false,\r\n                        speed: 5,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: true,\r\n                            area: 800,\r\n                        },\r\n                        value: 80,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                    },\r\n                    shape: {\r\n                        type: \"circle\",\r\n                    },\r\n                    size: {\r\n                        value: { min: 1, max: 5 },\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n  )\r\n}\r\n\r\nexport default Particle"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}